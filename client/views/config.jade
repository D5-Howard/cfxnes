mixin device-input(port, device, input, inputName)
    .form-group
        .col-xs-3.col-xs-offset-1.text-right
            label #{inputName}
        .col-xs-3
            span {{ getMappedInputName(#{port}, '#{device}', '#{input}') }}
        .col-xs-3
            button.btn.btn-default(ng-click="recordInput(#{port}, '#{device}', '#{input}')") Change

mixin device(port)
    .col-xs-6
        .device-select
            label Controller&nbsp;#{port}
            .btn-group
                button.btn.btn-default(ng-model="controls.devices[#{port}]" btn-radio="'none'") None
                button.btn.btn-default(ng-model="controls.devices[#{port}]" btn-radio="'joypad'") Joypad
                button.btn.btn-default(ng-model="controls.devices[#{port}]" btn-radio="'zapper'") Zapper
        div(ng-show="controls.devices[#{port}] == 'joypad'")
            +device-input(port, "joypad", "a",      "A")
            +device-input(port, "joypad", "b",      "B")
            +device-input(port, "joypad", "start",  "Start")
            +device-input(port, "joypad", "select", "Select")
            +device-input(port, "joypad", "left",   "Left")
            +device-input(port, "joypad", "right",  "Right")
            +device-input(port, "joypad", "up",     "Up")
            +device-input(port, "joypad", "down",   "Down")
        div(ng-show="controls.devices[#{port}] == 'zapper'")
            +device-input(port, "zapper", "trigger", "Trigger")

.container
    h1 Configuration

    accordion.form-horizontal
        accordion-group(heading="Emulation" is-open="emulation.visible")
            .form-group
                label.control-label.col-xs-2(for="tv-system") TV system
                .col-xs-3
                    select.form-control(id="tv-system" ng-model="emulation.tvSystem")
                        option(value="auto") Autodetect
                        option(value="ntsc") NTSC
                        option(value="pal")  PAL

        accordion-group(heading="Video" is-open="video.visible")
            .form-group
                label.control-label.col-xs-2(for="video-debugging") Output scale
                .col-xs-3
                    input.form-control(id="video-scale" type="number" ng-model="video.scale" min="1" max="{{video.maxScale}}")
            .form-group
                label.control-label.col-xs-2(for="color-palette") Color palette
                .col-xs-3
                    select.form-control(id="color-palette" ng-model="video.palette")
                        option(value="default")   Default
                        option(value="bright")    Bright
                        option(value="realistic") Realistic
            .form-group(ng-show="video.webGLSupported")
                .col-xs-3.col-xs-offset-2
                    input(id="video-webgl" type="checkbox" ng-model="video.webGL")
                    label(for="video-webgl") Use WebGL for rendering
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="video-smoothing" type="checkbox" ng-model="video.smoothing")
                    label(for="video-smoothing") Enable smoothing
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="video-debugging" type="checkbox" ng-model="video.debugging")
                    label(for="video-debugging") Show patterns and paletts

        accordion-group(heading="Audio" is-open="audio.visible")
            .form-group
                label.control-label.col-xs-2(for="audio-volume") Volume
                .col-xs-3
                    slider(id="audio-volume" ng-model="audio.volume" ng-disabled="!audio.enabled" min="0" step="1" max="100" formater="percentageFormater")
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-enabled" type="checkbox" ng-model="audio.enabled")
                    label(for="audio-enabled") Enable audio
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-pulse-1-enabled" type="checkbox" ng-model="audio.channels.pulse1")
                    label(for="audio-pulse-1-enabled") Enable pulse channel 1
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-pulse-2-enabled" type="checkbox" ng-model="audio.channels.pulse2")
                    label(for="audio-pulse-2-enabled") Enable pulse channel 2
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-triangle-enabled" type="checkbox" ng-model="audio.channels.triangle")
                    label(for="audio-triangle-enabled") Enable triangle channel
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-noise-enabled" type="checkbox" ng-model="audio.channels.noise")
                    label(for="audio-noise-enabled") Enable noise channel
            .form-group
                .col-xs-3.col-xs-offset-2
                    input(id="audio-dmc-enabled" type="checkbox" ng-model="audio.channels.dmc")
                    label(for="audio-dmc-enabled") Enable DMC channel

        accordion-group(heading="Controls" is-open="controls.visible")
            .row
                +device(1)
                +device(2)
            .row
                button.col-xs-offset-1.btn.btn-default.btn-restore-controls(ng-click="restoreDefaults()") Restore to defaults
